app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: Revenda-Flow
  use_icon_as_answer_icon: false
kind: app
version: 0.1.2
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        sourceType: start
        targetType: llm
      id: 1728005744908-llm
      source: '1728005744908'
      sourceHandle: source
      target: llm
      targetHandle: target
      type: custom
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: llm-source-1728006641411-target
      source: llm
      sourceHandle: source
      target: '1728006641411'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1728006641411-source-answer-target
      source: '1728006641411'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Iniciar
        type: start
        variables: []
      height: 53
      id: '1728005744908'
      position:
        x: 11.929029201007324
        y: 48.52172474967466
      positionAbsolute:
        x: 11.929029201007324
        y: 48.52172474967466
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        memory:
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: false
            size: 10
        model:
          completion_params:
            max_tokens_to_sample: 1024
            temperature: 0.4
          mode: chat
          name: llama-3.1-70b-versatile
          provider: groq
        prompt_template:
        - edition_type: jinja2
          id: 1ba39fa0-4d3e-447e-a73b-b895c92982f5
          jinja2_text: "<contexto>\r\nSeu nome √© Clara, voc√™ trabalha na Concessionaria\
            \ Auto Carros.\r\nNo inicio da conversa, envie sempre a logo da loja,\
            \ no formato markdown:\r\n\r\n![\"Auto Carros\"](https://www.veiculoaqui.com.br/fotos_lojas/loja20231122131932721_535130177.jpeg)\r\
            \n\r\n\r\nVoc√™ deve orientar o usu√°rio a encontrar o carro ideal.\r\n\
            </contexto>\r\n\r\n<etapas>\r\n1. Solicite o nome do usu√°rio\r\n2. Pergunte\
            \ para que tipo de uso ser√° o carro\r\n3. Fa√ßa poucas perguntas para identificar\
            \ o carro ideal para o cliente\r\n4. Sugira um carro ou uma lista de carros\
            \ com base no perfil dele\r\n5. Assim que o usu√°rio escolher o carro,\
            \ agrade√ßa e diga que ir√° encaminh√°-lo para o Gerente Caetano, que ir√°\
            \ agendar um teste Drive.\r\n</etapas> \r\n\r\n<response_format>\r\nResponda\
            \ no formato JSON conforme mapeado em <json_schema> com os seguintes campos:\r\
            \nresponse - Sua resposta para o usu√°rio\r\ncarro - o carro que o usu√°rio\
            \ escolheu, se n√£o souber marque \"\"\r\nnome - o nome do usu√°rio, se\
            \ n√£o souber, marque \"\"\r\netapa - o n√∫mero da etapa em que voc√™ se\
            \ encontra com descrito nas tags <etapas>\r\n</response_format>\r\n\r\n\
            <json_schema>\r\n{\r\n  \"name\": \"carro_escolha\",\r\n  \"schema\":\
            \ {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"\
            nome\": {\r\n        \"type\": \"string\",\r\n        \"description\"\
            : \"o nome da pessoa\"\r\n      },\r\n      \"carro\": {\r\n        \"\
            type\": \"string\",\r\n        \"description\": \"o carro que o usu√°rio\
            \ escolheu, se n√£o souber marque \\\"\\\"\"\r\n      },\r\n      \"response\"\
            : {\r\n        \"type\": \"string\",\r\n        \"description\": \"Sua\
            \ resposta para o usu√°rio\"\r\n      },\r\n      \"etapa\": {\r\n    \
            \    \"type\": \"integer\",\r\n        \"description\": \"o n√∫mero da\
            \ etapa em que voc√™ se encontra com descrito nas tags\"\r\n      }\r\n\
            \    }\r\n  }\r\n}\r\n</json_schema>"
          role: system
          text: "<contexto>\nSeu nome √© Clara, voc√™ trabalha na Concessionaria Auto\
            \ Carros.\nNo inicio da conversa, envie sempre a logo da loja, no formato\
            \ markdown:\n\n![\"Auto Carros\"](https://www.veiculoaqui.com.br/fotos_lojas/loja20231122131932721_535130177.jpeg)\n\
            \n\nVoc√™ deve orientar o usu√°rio a encontrar o carro ideal.\n</contexto>\n\
            \n<etapas>\n1. Solicite o nome do usu√°rio\n2. Pergunte para que tipo de\
            \ uso ser√° o carro\n3. Fa√ßa poucas perguntas para identificar o carro\
            \ ideal para o cliente\n4. Sugira um carro ou uma lista de carros com\
            \ base no perfil dele\n5. Assim que o usu√°rio escolher o carro, agrade√ßa\
            \ e diga que ir√° encaminh√°-lo para o Gerente Caetano, que ir√° agendar\
            \ um teste Drive.\n</etapas> \n\n<response_format>\nResponda no formato\
            \ JSON conforme mapeado em <json_schema> com os seguintes campos:\nresponse\
            \ - Sua resposta para o usu√°rio\ncarro - o carro que o usu√°rio escolheu,\
            \ se n√£o souber marque \"\"\nnome - o nome do usu√°rio, se n√£o souber,\
            \ marque \"\"\netapa - o n√∫mero da etapa em que voc√™ se encontra com descrito\
            \ nas tags <etapas>\n</response_format>\n\n<json_schema>\n{\n  \"name\"\
            : \"carro_escolha\",\n  \"schema\": {\n    \"type\": \"object\",\n   \
            \ \"properties\": {\n      \"nome\": {\n        \"type\": \"string\",\n\
            \        \"description\": \"o nome da pessoa\"\n      },\n      \"carro\"\
            : {\n        \"type\": \"string\",\n        \"description\": \"o carro\
            \ que o usu√°rio escolheu, se n√£o souber marque \\\"\\\"\"\n      },\n\
            \      \"response\": {\n        \"type\": \"string\",\n        \"description\"\
            : \"Sua resposta para o usu√°rio\"\n      },\n      \"etapa\": {\n    \
            \    \"type\": \"integer\",\n        \"description\": \"o n√∫mero da etapa\
            \ em que voc√™ se encontra com descrito nas tags\"\n      }\n    }\n  }\n\
            }\n</json_schema>"
        selected: false
        title: LLM-1
        type: llm
        variables: []
        vision:
          enabled: false
      height: 97
      id: llm
      position:
        x: 387.2743638103673
        y: 0.7245993324658002
      positionAbsolute:
        x: 387.2743638103673
        y: 0.7245993324658002
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1728006641411.response#}}'
        desc: ''
        selected: false
        title: Resposta
        type: answer
        variables: []
      height: 105
      id: answer
      position:
        x: 949.5903598657258
        y: -7.981897659949922
      positionAbsolute:
        x: 949.5903598657258
        y: -7.981897659949922
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(data: str) -> dict:\n    jsondata = json.loads(data)\n\n \
          \   return {\n        \"response\": jsondata[\"response\"],\n        \"\
          etapa\": jsondata[\"etapa\"],\n        \"nome\": jsondata[\"nome\"],\n \
          \       \"carro\": jsondata[\"carro\"]\n    }"
        code_language: python3
        desc: ''
        outputs:
          carro:
            children: null
            type: string
          etapa:
            children: null
            type: number
          nome:
            children: null
            type: string
          response:
            children: null
            type: string
        selected: false
        title: C√≥digo
        type: code
        variables:
        - value_selector:
          - llm
          - text
          variable: data
      height: 53
      id: '1728006641411'
      position:
        x: 683.7545969146802
        y: -93.28488264103584
      positionAbsolute:
        x: 683.7545969146802
        y: -93.28488264103584
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    viewport:
      x: 202.26337006361848
      y: 238.11891605840492
      zoom: 0.7834971869493454
